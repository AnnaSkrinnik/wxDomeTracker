#!/usr/bin/env python
# -*- coding: iso-8859-15 -*-
# generated by wxGlade 0.6.3 on Wed Mar 16 15:25:36 2011

import wx
import argoterm
#import stellarium
from obstools import obsmathlib

# begin wxGlade: extracode
# end wxGlade

TIMER_ID = 100
WX_WHITE = wx.Colour(255, 255, 255)
WX_RED = wx.Colour(255, 0, 0)
DISPLAY_FONT_SIZE = 110
FONT_DIGITAL = "Digital-7 Mono"
FONT_STR = ""
TIME = 0
SOCKET_HOST = 'localhost'
SOCKET_PORT = 10000

class ArgoDisplay(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: ArgoDisplay.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.pnlDisplay = wx.Panel(self, -1)
        self.lblRACaption = wx.StaticText(self.pnlDisplay, -1, "RA: ")
        self.lblRightAscension = wx.StaticText(self.pnlDisplay, -1, u"-00:00:00")
        self.lblHACaption = wx.StaticText(self.pnlDisplay, -1, "HA:")
        self.lblHourAngle = wx.StaticText(self.pnlDisplay, -1, u"-00:00:00")
        self.lblDeclinationCaption = wx.StaticText(self.pnlDisplay, -1, "DE: ")
        self.lblDeclination = wx.StaticText(self.pnlDisplay, -1, u"-00° 00' 00.00\"")
        self.lblAzimuthCaption = wx.StaticText(self.pnlDisplay, -1, "AZ:")
        self.lblAzimuth = wx.StaticText(self.pnlDisplay, -1, "-000.0000")
        self.lblAltitudeCaption = wx.StaticText(self.pnlDisplay, -1, "AL:")
        self.lblAltitude = wx.StaticText(self.pnlDisplay, -1, "-00.0000")
        
        self.timer = wx.Timer(self, TIMER_ID)
        wx.EVT_TIMER(self, TIMER_ID, self.on_timer)
        
        self.argo = argoterm.ArgoInterface(0)
        #self.stellarium_server = stellarium.StellariumInterface(SOCKET_HOST, SOCKET_PORT)

        self.__set_properties()
        self.__do_layout()

        self.timer.Start(250)
        # end wxGlade
    
    def on_timer(self, evt):
        rad = self.argo.getRAD(2)
        RA = rad[0]
        DEC = rad[1]
        
        LMST = obsmathlib.calculateLMST()
        HA = obsmathlib.calculateHourAngle(RA, LMST)
        
        hhRA, mmRA, ssRA = RA
        degDEC, mmDEC, ssDEC = DEC
                
        hhHA = int(HA)
        mmHA = int((HA - hhHA) * 60)
        ssHA = int((((HA - hhHA) * 60) - (int((HA - hhHA) * 60))) * 60)
        # text jumping around really is annoying 
        
        raText = str("%02d" % hhRA) + ':' + str("%02d" % mmRA) + ':' + str("%02d" % abs(int(ssRA)))
        
        sign = ""
        if hhHA < 0: sign = "-"
        haText = str(sign + ("%02d" % abs(hhHA))) + ':' + str("%02d" % abs(mmHA)) + ':' + str("%02d" % abs(int(ssHA))) #str("%.2f" % HA)
        
        sign = ""
        if degDEC < 0: sign = "-" 
        decText = str(sign + ("%02d" % abs(degDEC))) + '° ' + str("%02d" % abs(mmDEC)) + '\' ' + str("%02d" % abs(int(ssDEC))) + '\" '
        
        altitude = obsmathlib.calculateAltitude(RA, DEC, LMST)
        
        altText = str("%.2f" % altitude)
        azmthText = str("%.2f" % (obsmathlib.calculateAzimuth(RA, DEC, altitude, LMST)))
                
        self.lblRightAscension.SetLabel(raText)
        self.lblHourAngle.SetLabel(haText)
        self.lblDeclination.SetLabel(decText)
        self.lblAzimuth.SetLabel(azmthText + '°')
        self.lblAltitude.SetLabel(altText + '°')
        
        DEC = int(degDEC), int(mmDEC), int(ssDEC)
        # update the server 
        #self.stellarium_server.setPosition(TIME, RA, DEC)
        
    def __set_properties(self):
        # begin wxGlade: ArgoDisplay.__set_properties
        self.SetTitle("ARGO NAVIS Display")
        self.SetSize((1200, 960))
        self.SetBackgroundColour(wx.Colour(0, 0, 0))
        self.lblRACaption.SetForegroundColour(WX_RED)
        self.lblRACaption.SetFont(wx.Font(64, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, FONT_STR))
        self.lblRightAscension.SetForegroundColour(WX_RED)
        self.lblRightAscension.SetFont(wx.Font(DISPLAY_FONT_SIZE, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, FONT_STR))
        self.lblHACaption.SetForegroundColour(WX_RED)
        self.lblHACaption.SetFont(wx.Font(64, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, FONT_STR))
        self.lblHourAngle.SetForegroundColour(WX_RED)
        self.lblHourAngle.SetFont(wx.Font(DISPLAY_FONT_SIZE, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, FONT_STR))
        self.lblDeclinationCaption.SetForegroundColour(WX_RED)
        self.lblDeclinationCaption.SetFont(wx.Font(64, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, FONT_STR))
        self.lblDeclination.SetForegroundColour(WX_RED)
        self.lblDeclination.SetFont(wx.Font(DISPLAY_FONT_SIZE, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, FONT_STR))
        self.lblAzimuthCaption.SetForegroundColour(WX_RED)
        self.lblAzimuthCaption.SetFont(wx.Font(64, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, FONT_STR))
        self.lblAzimuth.SetForegroundColour(WX_RED)
        self.lblAzimuth.SetFont(wx.Font(DISPLAY_FONT_SIZE, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, FONT_STR))
        self.lblAltitudeCaption.SetForegroundColour(WX_RED)
        self.lblAltitudeCaption.SetFont(wx.Font(64, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, FONT_STR))
        self.lblAltitude.SetForegroundColour(WX_RED)
        self.lblAltitude.SetFont(wx.Font(DISPLAY_FONT_SIZE, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, FONT_STR))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: ArgoDisplay.__do_layout
        szrMain = wx.BoxSizer(wx.HORIZONTAL)
        grid_sizer_1 = wx.FlexGridSizer(5, 2, 0, 20)
        grid_sizer_1.Add(self.lblRACaption, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_1.Add(self.lblRightAscension, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_1.Add(self.lblHACaption, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_1.Add(self.lblHourAngle, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_1.Add(self.lblDeclinationCaption, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_1.Add(self.lblDeclination, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_1.Add(self.lblAzimuthCaption, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_1.Add(self.lblAzimuth, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_1.Add(self.lblAltitudeCaption, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_1.Add(self.lblAltitude, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        self.pnlDisplay.SetSizer(grid_sizer_1)
        grid_sizer_1.AddGrowableCol(1)
        szrMain.Add(self.pnlDisplay, 1, wx.ALL|wx.EXPAND|wx.ALIGN_CENTER_VERTICAL, 24) #|wx.ALIGN_CENTER_VERTICAL
        self.SetSizer(szrMain)
        self.Layout()
        self.Centre()
        # end wxGlade

class MyApp(wx.App):
    def OnInit(self):
        wx.InitAllImageHandlers()
        frmMain = ArgoDisplay(None, -1, "")
        self.SetTopWindow(frmMain)
        frmMain.Show()
        return 1

# end of class MyApp

if __name__ == "__main__":
    app = MyApp(0)
    app.MainLoop()

